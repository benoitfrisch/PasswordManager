imports:
    - { resource: config.yml }
    - { resource: security.yml }

framework:
    test: ~
    session:
        storage_id: session.storage.mock_file
    router:
        resource: "%kernel.root_dir%/config/routing_dev.yml"
        strict_requirements: true
    profiler:
        only_exceptions: false
        collect: false

web_profiler:
    toolbar: false
    intercept_redirects: false

monolog:
    handlers:
        main:
            type:   stream
            path:   "%env(SYMFONY_LOG)%"
            level:  info
        console:
            type:   console
            bubble: false
        # uncomment to get logging in your browser
        # you may have to allow bigger header sizes in your Web server configuration
        #firephp:
        #    type:   firephp
        #    level:  info
        #chromephp:
        #    type:   chromephp
        #    level:  info

swiftmailer:
    disable_delivery:  true

# swiftmailer:
#     disable_delivery: true

# It's recommended to use a separate database for tests. This allows to have a
# fixed and known set of data fixtures, it simplifies the code of tests and it
# makes them more robust.
# In this case we just need to define a different path for the application database.
#doctrine:
#    dbal:
#        path: "%kernel.root_dir%/../var/data/blog_test.sqlite"

# this configuration simplifies testing URLs protected by the security mechanism
# See http://symfony.com/doc/current/cookbook/testing/http_authentication.html
#security:
#    encoders:
#        Symfony\Component\Security\Core\User\User: plaintext
#    firewalls:
#        secured_area:
#            http_basic: ~
#    providers:
#            in_memory:
#                memory:
#                  users:
#                    ryan:
#                        password: ryanpass
#                        roles: 'ROLE_USER'
#                    admin:
#                        password: kitten
#                        roles: 'ROLE_ADMIN'
#
#    access_control:
#        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/manager/*, role: IS_AUTHENTICATED_FULLY }
#        - { path: ^/admin/*, role: ROLE_ADMIN }